name: Build
on:
  push:
    branches:
      - 'master'
    tags-ignore:
      - '**'
    paths-ignore:
      - 'LICENSE'
      - '**.md'
  pull_request:
  release:
    types: [created]

jobs:
  build:
    name: Build UTM
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [arm64, x86_64]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Setup Xcode Path
        shell: bash
        run: |
          if [ ! -d "${{ secrets.XCODE_PATH }}" ]; then
            echo "WARNING: invalid XCODE_PATH specified in Github Secrets, using default Xcode version"
          else
            sudo xcode-select -switch "${{ secrets.XCODE_PATH }}"
          fi
      - name: Cache Sysroot
        id: cache-sysroot
        uses: actions/cache@v1
        with:
          path: sysroot-${{ matrix.arch }}
          key: ${{ matrix.arch }}-${{ hashFiles('scripts/build_dependencies.sh') }}-${{ hashFiles('patches/**') }}
      - name: Setup Path
        shell: bash
        run: |
          echo "::add-path::/usr/local/opt/gettext/bin"
          echo "::add-path::/usr/local/opt/bison/bin"
      - name: Build Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          brew install bison pkg-config nasm
          rm -f /usr/local/lib/pkgconfig/*.pc
          ./scripts/build_dependencies.sh -a ${{ matrix.arch }}
      - name: Compress Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          mkdir sysroot_tar
          tar cf sysroot_tar/sysroot.tgz sysroot-${{ matrix.arch }}
      - name: Upload Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v1
        with:
          name: Sysroot-${{ matrix.arch }}
          path: sysroot_tar
      - name: Build UTM (Simulator)
        if: matrix.arch == 'x86_64'
        run: |
          xcodebuild archive -archivePath build-utm/UTM -scheme UTM -sdk iphonesimulator -configuration Release
      - name: Build UTM (iOS)
        if: matrix.arch == 'arm64'
        run: |
          xcodebuild archive -archivePath build-utm/UTM -scheme UTM -sdk iphoneos -configuration Release CODE_SIGNING_ALLOWED=NO
      - name: Upload UTM
        uses: actions/upload-artifact@v1
        with:
          name: UTM-${{ matrix.arch }}
          path: build-utm
  package:
    name: Package
    runs-on: macos-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: UTM-arm64
      - name: Install ldid
        run: |
          brew install ldid
      - name: Fakesign IPA
        run: |
          find UTM-arm64/UTM.xcarchive -type f \( -path '*/UTM.app/UTM' -or -path '*/UTM.app/Frameworks/*.dylib' \) -exec chmod +x \{\} \;
          ./scripts/resign.sh UTM-arm64/UTM.xcarchive .
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: UTM.ipa
          asset_name: UTM.ipa
          asset_content_type: application/octet-stream
